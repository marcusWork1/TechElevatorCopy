package com.techelevator;

public class Lecture {
    /*
    1. This method is named returnNotOne and it returns an int. Change
    it so that it returns something other than a 1.
    */
//  access return
//   type  type   function-name(parameters)  // parameters are values sent to the function to process
    public int    returnNotOne() {
         return 0;  // send this value back to whatever calls this function
        // return 0.0;  // error because a double cannot be converted to a int
    }

    /*
    2. This method is named returnNotHalf and it returns a double. Change
    it so that it returns something other than a 0.5.
    */
//  access return
//   type  type   function-name(parameters)  // parameters are values sent to the function to process
    public double returnNotHalf() {
        return .234;
        // return 4;  // OK to return an int when it wants it wants a double as it can be converted
    }

    /*
    3. This method needs to return a String. Fix it to return a valid String.

       String NOT a basic Java datatype (byte, int, long, float, double boolean, char)

       String is "special in Java" as it is used like a datatype, but isn't.

       a String value is enclosed in " " (double quotes)
       a char value is enclosed in ' ' (single quotes)

       Use a String when you want to use multiple char values - "Frank"
       Use a char when you want to use a single char - 'F'
       */
    public String returnName() {
        return "cheese";
        // return null;  // the null keyword represents an unknown value
    }

    /*
    4. This method currently returns an int. Change it so that it returns a double.

       changed the return type double
    */
    public double returnDoubleOfTwo() {
        return 2.0;
        // return 2; // OK to return an int when it wants it wants a double as it can be converted to a double
        // return (double) 2; // case the int value to a double
    }

    /*
    5. This method should return the language that you're learning. Change
    it so that it does that.

    Change the return type to String
    Return the value "Java"
    */
    public String returnNameOfLanguage() {
        return "Java";
    }

    /*
    6. This method uses an if statement to define what to return. Have it
    return true if the if statement passes.
    */
    public boolean returnTrueFromIf() {
        if (true) {
            return true;
        }
        // only you get here when if is false
        return false;
    }

    /*
    7. This method uses an if to check to make sure that one is equal
    to one. Make sure it returns true when one equals one.
    */
    public boolean returnTrueWhenOneEqualsOne() {
        if (1 == 1) {
            return true;
        }
        return false;
    }

    /*
    8. This method checks a parameter passed to the method to see if it's
    greater than 5 and returns true if it is.

    This method receives an parameter called number

    a parameter is a value the method can use in its processing

    return-type function-name(datatype name)  // parameter name can be anything you want

    */

    public boolean returnTrueWhenGreaterThanFive(int number) {
        if (number > 5) {  // check the value in the parameter called number to see if > 5
           return true;
        } else {
           return false;
        }
        // We will never get to this point in the program
        // return false;  // this generates an error as we will never get to execute this statement

        //**** Alternative code
//        if (number > 5) {  // check the value in the parameter called number to see if > 5
//            return true;
//        }
//        return false;
    }

    /*
    9. If you think about it, we really don't need the if statement above.
    How can we rewrite exercise 8 to have only one line of code?
    */
    public boolean returnTrueWhenGreaterThanFiveInOneLine(int number) {
        // number > 5 is an expression that returns a boolean
        // we want to return the boolean that matches the result of the condition
        // so don't really need an if statement
        return number > 5 ; // return the value generated by evaluating the expression
    }

    /*
    10. This method will take a number and do the following things to it:
    * If addThree is true, we'll add three to that number
    * If addFive is true, we'll add five to that number
    * We'll then return the result
    */
    public int returnNumberAfterAddThreeAndAddFive(int number, boolean addThree, boolean addFive) {
     // if (addThree == true)  is the same teh following statement
        if (addThree) {   // addThree is an express that evaluates to a boolean because addThree is defined as boolean
            number = number + 3;
        }

        // We can't use an else here. They could both be true, so we have to check each one.

        if (addFive) {
            number += 5;  // shorthand operator for adding and asigning in one operation (number = number + 5)
        }

        return number;
    }

    /*
    11. Write an if statement that returns "Fizz" if the parameter is 3 and returns an empty String for anything else.
    */
    public String returnFizzIfThree(int number) {
        if(number == 3) {
            return "Fizz" ;
        }
        return "";
    }

    /*
    12. Now write the above using the Ternary operator ?:. If you're not sure what this is, you can Frankle it.

     ternary operator is shorthand for if-else coding
     ternary operator is the only operator that takes 3 values

     (condition) ? value-if-true : value-if-false

     like if (condition) {
                          value-if-true
                         }
          else {
               value-if-false
               }

    */
    public String returnFizzIfThreeUsingTernary(int number) {
    //                          value   value
    //                           true   false
         return (number == 3) ? "Fizz" : "";
    }

    /*
    13. Write an if/else statement that returns "Fizz" if the parameter is 3, "Buzz" if the parameter is 5 and an empty String for anything else.
    */
    public String returnFizzOrBuzzOrNothing(int number) {
        if (number == 3) {
            return "Fizz";
        }
        if (number == 5) {
            return "Buzz";
        }
        return "";
    }

    /*
    14. Write an if statement that checks if the parameter number is either equal to or greater than 18. Return "Adult" if it is or "Minor" if it's not.
    */
    public String returnAdultOrMinor(int number) {
        if (number >= 18 ) {   // if (number == 18 || number > 18) {
            return "Adult";
        } else {
            return "Minor";
        }
    }

    /*
    15. Now, do it again with a different boolean opeation.
    */
    public String returnAdultOrMinorAgain(int number) {
        if (number == 18 || number > 18) {
            return "Adult";
        } else {
            return "Minor";
        }
    }

    /*
    16. Return as above, but also return "Teen" if the number is between 13 and 17 inclusive.
    */
    public String returnAdultOrMinorOrTeen(int number) {
        if (number >= 18) {
            return "Adult";
        } else if (number >= 13 && number <= 17) {
            return "Teen";
        } else {
            return "Minor";  // we only get here is the previous two conditions are false
        }
    }

}