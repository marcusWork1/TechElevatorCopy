/*
	 * Modify and return the given Map as follows: if "Peter" has more than 0 money, transfer half of it to "Paul",
	 * but only if Paul has less than $10s.
	 *
	 * Note, monetary amounts are specified in cents: penny=1, nickel=5, ... $1=100, ... $10=1000, ...
	 *
	 * robPeterToPayPaul({"Peter": 2000, "Paul": 99}) → {"Peter": 1000, "Paul": 1099}
	 * robPeterToPayPaul({"Peter": 2000, "Paul": 30000}) → {"Peter": 2000, "Paul": 30000}
	 *
	 */
	public Map<String, Integer> robPeterToPayPaul(Map<String, Integer> peterPaul) {
		int petersMoney = peterPaul.get("Peter");
		int paulsMoney = peterPaul.get("Paul");

		if (petersMoney > 0 && paulsMoney < 1000) {
			int moneyToPayPaul = petersMoney / 2;
			peterPaul.put("Paul", moneyToPayPaul + paulsMoney);
			peterPaul.put("Peter", petersMoney - moneyToPayPaul);
		}

		return peterPaul;
	}

	/*
	 * Modify and return the given Map as follows: if "Peter" has $50 or more, AND "Paul" has $100 or more,
	 * then create a new "PeterPaulPartnership" worth a combined contribution of a quarter of each partner's
	 * current worth.
	 *
	 * peterPaulPartnership({"Peter": 50000, "Paul": 100000}) → {"Peter": 37500, "Paul": 75000, "PeterPaulPartnership": 37500}
	 * peterPaulPartnership({"Peter": 3333, "Paul": 1234567890}) → {"Peter": 3333, "Paul": 1234567890}
	 *
	 */
	public Map<String, Integer> peterPaulPartnership(Map<String, Integer> peterPaul) {
		int petersMoney = peterPaul.get("Peter");
		int paulsMoney = peterPaul.get("Paul");

		if (petersMoney >= 5000 && paulsMoney >= 10000) {
			int paulsContribution = paulsMoney / 4;
			int petersContribution = petersMoney / 4;

			peterPaul.put("Paul", peterPaul.get("Paul") - paulsContribution);
			peterPaul.put("Peter", peterPaul.get("Peter") - petersContribution);
			peterPaul.put("PeterPaulPartnership", paulsContribution + petersContribution);

		}

		return peterPaul;
	}
